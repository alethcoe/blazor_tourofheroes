@inject IHeroService client;
@inject NavigationManager NavigationManager
@inject IMessagingService _MessagingService;

<div id="search-component">
  <h4><label for="searchBox">Hero Search</label></h4>

  <input id="search-box" @bind-value="searchBox" @bind-value:event="oninput"/>

  <ul class="search-result">
      @foreach(var hero in filteredHeroes){
    <li @onclick="@(() => OnSelect(hero))">
      <a>
        @hero.Name
      </a>
    </li>
    }
   
  </ul>
</div>

@code{
    string search;
    string searchBox {
        get{
            return search;
        }
        set{
            search = value;
            filteredHeroes = Search(value);
        }
    }
    Hero[] filteredHeroes = new Hero[0];

    
    private  Hero[] Search(string text)
    {
       return client.Search(searchBox);
    }
    private async Task OnSelect(Hero hero){
        await _MessagingService.Add($"Hero selected {hero.Name}");
        NavigationManager.NavigateTo("/herodetail/" + hero.Name);
    }
    
}

<style>
    /* HeroSearch private styles */
.search-result li {
  border-bottom: 1px solid gray;
  border-left: 1px solid gray;
  border-right: 1px solid gray;
  width: 195px;
  padding: 5px;
  background-color: white;
  cursor: pointer;
  list-style-type: none;
}

.search-result li:hover {
  background-color: #607D8B;
}

.search-result li a {
  color: #888;
  display: block;
  text-decoration: none;
}

.search-result li a:hover {
  color: white;
}
.search-result li a:active {
  color: white;
}
#search-box {
  width: 200px;
  height: 20px;
}


ul.search-result {
  margin-top: 0;
  padding-left: 0;
}
</style>